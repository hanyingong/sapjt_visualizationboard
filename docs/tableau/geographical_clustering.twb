<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.17.0515.2100                               -->
<workbook original-version='10.3' source-build='10.3.0 (10300.17.0515.2100)' source-platform='win' version='10.3' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='geographical_clustering' path='/workbooks' revision='1.7' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='mrtlist' inline='true' name='federated.0xkihiv15vrdkm1ecxz8v07hctg1' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='mrtlist' name='textscan.0lcxz4b1afitf318190pa0dy0p3b'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='D:\wamp64\www\github\sapjt_visualizationboard\docs\tableau\dataset_tableau\mrtlist.csv' dataRefreshTime='' directory='D:/wamp64/www/github/sapjt_visualizationboard/docs/tableau/dataset_tableau' filename='C:\Users\HANYIN~1.201\AppData\Local\Temp\TableauTemp\01bvv3m1ape5sb1a9sb6j1m1cwnb\mrtlist.csv.xlsx' interpretationMode='8' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='user_location_count_stacked' name='textscan.15z2diz0pqciya138mb8l0a8p689'>
            <connection class='textscan' directory='D:/wamp64/www/github/sapjt_visualizationboard/docs/tableau/dataset_tableau' filename='user_location_count_stacked.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='user_location_clus' name='textscan.02kznvh1v4f7nf18ne9pw0gf8kwo'>
            <connection class='textscan' directory='D:/wamp64/www/github/sapjt_visualizationboard/docs/tableau/dataset_tableau' filename='user_location_clus.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[user_location_count_stacked.csv].[uid]' />
              <expression op='[user_location_clus.csv].[uid]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[mrtlist.csv].[LOC]' />
                <expression op='[user_location_count_stacked.csv].[Label]' />
              </expression>
            </clause>
            <relation connection='textscan.0lcxz4b1afitf318190pa0dy0p3b' name='mrtlist.csv' table='[D:\wamp64\www\github\sapjt_visualizationboard\docs\tableau\dataset_tableau\mrtlist#csv]' type='table'>
              <columns character-set='UTF-8' gridOrigin='A1:I189:no:A1:I189:1' header='yes' locale='en_SG' separator=','>
                <column datatype='string' name='LOCATION' ordinal='0' />
                <column datatype='string' name='REGION' ordinal='1' />
                <column datatype='string' name='LOC' ordinal='2' />
              </columns>
            </relation>
            <relation connection='textscan.15z2diz0pqciya138mb8l0a8p689' name='user_location_count_stacked.csv' table='[user_location_count_stacked#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
                <column datatype='integer' name='uid' ordinal='0' />
                <column datatype='string' name='Label' ordinal='1' />
                <column datatype='integer' name='total_count' ordinal='2' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.02kznvh1v4f7nf18ne9pw0gf8kwo' name='user_location_clus.csv' table='[D:\wamp64\www\github\sapjt_visualizationboard\docs\tableau\dataset_tableau\user_location_clus#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='uid' ordinal='1' />
              <column datatype='integer' name='loc_clus_id' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[F1]' value='[user_location_clus.csv].[F1]' />
          <map key='[LOCATION]' value='[mrtlist.csv].[LOCATION]' />
          <map key='[LOC]' value='[mrtlist.csv].[LOC]' />
          <map key='[Label]' value='[user_location_count_stacked.csv].[Label]' />
          <map key='[REGION]' value='[mrtlist.csv].[REGION]' />
          <map key='[loc_clus_id]' value='[user_location_clus.csv].[loc_clus_id]' />
          <map key='[total_count]' value='[user_location_count_stacked.csv].[total_count]' />
          <map key='[uid (user_location_clus.csv)]' value='[user_location_clus.csv].[uid]' />
          <map key='[uid]' value='[user_location_count_stacked.csv].[uid]' />
        </cols>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>LOCATION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LOCATION]</local-name>
            <parent-name>[mrtlist.csv]</parent-name>
            <remote-alias>LOCATION</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REGION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[REGION]</local-name>
            <parent-name>[mrtlist.csv]</parent-name>
            <remote-alias>REGION</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LOC</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LOC]</local-name>
            <parent-name>[mrtlist.csv]</parent-name>
            <remote-alias>LOC</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mrtlist.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I189:no:A1:I189:1&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>uid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[uid]</local-name>
            <parent-name>[user_location_count_stacked.csv]</parent-name>
            <remote-alias>uid</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Label</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Label]</local-name>
            <parent-name>[user_location_count_stacked.csv]</parent-name>
            <remote-alias>Label</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_count]</local-name>
            <parent-name>[user_location_count_stacked.csv]</parent-name>
            <remote-alias>total_count</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[user_location_count_stacked.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[user_location_clus.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>uid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[uid (user_location_clus.csv)]</local-name>
            <parent-name>[user_location_clus.csv]</parent-name>
            <remote-alias>uid</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>loc_clus_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[loc_clus_id]</local-name>
            <parent-name>[user_location_clus.csv]</parent-name>
            <remote-alias>loc_clus_id</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[user_location_clus.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Area' datatype='string' hidden='true' name='[AREA]' role='dimension' type='nominal' />
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[LOCATION]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;BOON KENG&quot;' value='&quot;Serangoon&quot;' />
          <semantic-value key='&quot;BUGIS&quot;' value='&quot;Central Water Catchment&quot;' />
          <semantic-value key='&quot;BUONA VISTA&quot;' value='&quot;Clementi&quot;' />
          <semantic-value key='&quot;HARBOUR FRONT&quot;' value='&quot;Outram&quot;' />
          <semantic-value key='&quot;JURONG&quot;' value='&quot;Jurong East&quot;' />
          <semantic-value key='&quot;KHATIB&quot;' value='&quot;Yishun&quot;' />
          <semantic-value key='&quot;KRANJI&quot;' value='&quot;Yishun&quot;' />
          <semantic-value key='&quot;MACPHERSON&quot;' value='&quot;Marine Parade&quot;' />
          <semantic-value key='&quot;MARINA BAY&quot;' value='&quot;Marine Parade&quot;' />
          <semantic-value key='&quot;NICOLL HIGHWAY&quot;' value='&quot;Central Water Catchment&quot;' />
          <semantic-value key='&quot;RAFFLES&quot;' value='&quot;Central Water Catchment&quot;' />
        </semantic-values>
      </column>
      <column datatype='string' hidden='true' name='[Label]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Objectid' datatype='integer' hidden='true' name='[OBJECTID]' role='measure' type='quantitative' />
      <column caption='Region' datatype='string' name='[REGION]' role='dimension' type='nominal' />
      <column caption='Stn No' datatype='string' hidden='true' name='[STN_NO]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' hidden='true' name='[X]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' hidden='true' name='[Y]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Loc Clus Id' datatype='integer' name='[loc_clus_id]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[total_count]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Uid (User Location Clus.Csv)' datatype='integer' hidden='true' name='[uid (user_location_clus.csv)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Uid' datatype='integer' name='[uid]' role='dimension' type='ordinal' />
      <column-instance column='[LOCATION]' derivation='None' name='[none:LOCATION:nk]' pivot='key' type='nominal' />
      <column-instance column='[REGION]' derivation='None' name='[none:REGION:nk]' pivot='key' type='nominal' />
      <column-instance column='[loc_clus_id]' derivation='None' name='[none:loc_clus_id:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Loc Clus Id)' hidden='true' name='[Action (Loc Clus Id)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[loc_clus_id]' />
        </groupfilter>
      </group>
      <group caption='Action (Location,Region)' hidden='true' name='[Action (Location,Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[LOCATION]' />
          <groupfilter function='level-members' level='[REGION]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Location,Region)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:LOCATION:nk]' />
          <groupfilter function='level-members' level='[none:REGION:nk]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='D:/wamp64/www/github/sapjt_visualizationboard/docs/tableau/dataset_tableau/mrtlist.tde' schema='Extract' tablename='Extract' update-time='07/24/2017 06:08:28 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='24721' timestamp-start='2017-07-24 18:08:28.706' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>LOCATION</remote-name>
              <remote-type>129</remote-type>
              <local-name>[LOCATION]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LOCATION</remote-alias>
              <ordinal>0</ordinal>
              <family>mrtlist.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ANG MO KIO&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WOODLANDS&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>24721</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LOC</remote-name>
              <remote-type>129</remote-type>
              <local-name>[LOC]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LOC</remote-alias>
              <ordinal>1</ordinal>
              <family>mrtlist.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>20</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;C1&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;W3&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>24721</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>2</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>24721.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>24721</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>24721.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>REGION</remote-name>
              <remote-type>129</remote-type>
              <local-name>[REGION]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>REGION</remote-alias>
              <ordinal>3</ordinal>
              <family>mrtlist.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;CENTRAL&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WEST&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>24721</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;CENTRAL&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>loc_clus_id</remote-name>
              <remote-type>16</remote-type>
              <local-name>[loc_clus_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>loc_clus_id</remote-alias>
              <ordinal>4</ordinal>
              <family>user_location_clus.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>215982.0</statistic>
                <statistic aggregation='Avg' datatype='real'>8.7367824926176123</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>19</statistic>
                <statistic aggregation='Stdev' datatype='real'>5.4428267112220752</statistic>
                <statistic aggregation='StdevP' datatype='real'>5.4427166250250183</statistic>
                <statistic aggregation='Var' datatype='real'>29.624362608392509</statistic>
                <statistic aggregation='VarP' datatype='real'>29.623164260323726</statistic>
                <statistic aggregation='Count' datatype='integer'>24721</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2619302.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_count</remote-name>
              <remote-type>16</remote-type>
              <local-name>[total_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_count</remote-alias>
              <ordinal>5</ordinal>
              <family>user_location_count_stacked.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>29498.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.1932365195582704</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>5</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.52847360442048619</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.52846291555375535</statistic>
                <statistic aggregation='Var' datatype='real'>0.27928435056918055</statistic>
                <statistic aggregation='VarP' datatype='real'>0.27927305311557554</statistic>
                <statistic aggregation='Count' datatype='integer'>24721</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>42102.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>uid</remote-name>
              <remote-type>3</remote-type>
              <local-name>[uid]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>uid</remote-alias>
              <ordinal>6</ordinal>
              <family>user_location_count_stacked.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20886</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>532429624321.0</statistic>
                <statistic aggregation='Avg' datatype='real'>21537543.963472351</statistic>
                <statistic aggregation='Min' datatype='integer'>683</statistic>
                <statistic aggregation='Max' datatype='integer'>1358513548</statistic>
                <statistic aggregation='Stdev' datatype='real'>45815107.721998408</statistic>
                <statistic aggregation='StdevP' datatype='real'>45814181.069131352</statistic>
                <statistic aggregation='Var' datatype='real'>2099024095578318.2</statistic>
                <statistic aggregation='VarP' datatype='real'>2098939187035153.2</statistic>
                <statistic aggregation='Count' datatype='integer'>24721</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6.3355102083964633e+19</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='quantitative' column='[total_count]' included-values='in-range'>
          <min>1</min>
          <max>5</max>
        </filter>
        <filter class='categorical' column='[uid]'>
          <groupfilter expression='COUNT([Number of Records]) &lt; 3' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
            <groupfilter function='level-members' level='[uid]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </groupfilter>
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.63278' measure-ordering='alphabetic' measure-percentage='0.36722' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:loc_clus_id:ok]' palette='cyclic_10_0' type='palette'>
            <map to='#1ba3c6'>
              <bucket>0</bucket>
            </map>
            <map to='#21b087'>
              <bucket>3</bucket>
            </map>
            <map to='#2cb5c0'>
              <bucket>1</bucket>
            </map>
            <map to='#30bcad'>
              <bucket>2</bucket>
            </map>
            <map to='#33a65c'>
              <bucket>4</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>19</bucket>
            </map>
            <map to='#57a337'>
              <bucket>5</bucket>
            </map>
            <map to='#7873c0'>
              <bucket>18</bucket>
            </map>
            <map to='#a26dc2'>
              <bucket>17</bucket>
            </map>
            <map to='#a2b627'>
              <bucket>6</bucket>
            </map>
            <map to='#ce69be'>
              <bucket>16</bucket>
            </map>
            <map to='#d5bb21'>
              <bucket>7</bucket>
            </map>
            <map to='#e03426'>
              <bucket>11</bucket>
            </map>
            <map to='#eb364a'>
              <bucket>12</bucket>
            </map>
            <map to='#eb73b3'>
              <bucket>15</bucket>
            </map>
            <map to='#f06719'>
              <bucket>10</bucket>
            </map>
            <map to='#f64971'>
              <bucket>13</bucket>
            </map>
            <map to='#f89217'>
              <bucket>9</bucket>
            </map>
            <map to='#f8b620'>
              <bucket>8</bucket>
            </map>
            <map to='#fc719e'>
              <bucket>14</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0xkihiv15vrdkm1ecxz8v07hctg1'>
      <datasources>
        <datasource caption='mrtlist' name='federated.0xkihiv15vrdkm1ecxz8v07hctg1' />
      </datasources>
      <datasource-dependencies datasource='federated.0xkihiv15vrdkm1ecxz8v07hctg1'>
        <column caption='Location' datatype='string' name='[LOCATION]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <semantic-values semantic-role='[State].[Name]'>
            <semantic-value key='&quot;BOON KENG&quot;' value='&quot;Serangoon&quot;' />
            <semantic-value key='&quot;BUGIS&quot;' value='&quot;Central Water Catchment&quot;' />
            <semantic-value key='&quot;BUONA VISTA&quot;' value='&quot;Clementi&quot;' />
            <semantic-value key='&quot;HARBOUR FRONT&quot;' value='&quot;Outram&quot;' />
            <semantic-value key='&quot;JURONG&quot;' value='&quot;Jurong East&quot;' />
            <semantic-value key='&quot;KHATIB&quot;' value='&quot;Yishun&quot;' />
            <semantic-value key='&quot;KRANJI&quot;' value='&quot;Yishun&quot;' />
            <semantic-value key='&quot;MACPHERSON&quot;' value='&quot;Marine Parade&quot;' />
            <semantic-value key='&quot;MARINA BAY&quot;' value='&quot;Marine Parade&quot;' />
            <semantic-value key='&quot;NICOLL HIGHWAY&quot;' value='&quot;Central Water Catchment&quot;' />
            <semantic-value key='&quot;RAFFLES&quot;' value='&quot;Central Water Catchment&quot;' />
          </semantic-values>
        </column>
        <column caption='Region' datatype='string' name='[REGION]' role='dimension' type='nominal' />
        <column caption='Loc Clus Id' datatype='integer' name='[loc_clus_id]' role='dimension' type='ordinal' />
        <column-instance column='[LOCATION]' derivation='None' name='[none:LOCATION:nk]' pivot='key' type='nominal' />
        <column-instance column='[REGION]' derivation='None' name='[none:REGION:nk]' pivot='key' type='nominal' />
        <column-instance column='[loc_clus_id]' derivation='None' name='[none:loc_clus_id:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:LOCATION:nk]'>
        <groupfilter function='level-members' level='[none:LOCATION:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:LOCATION:nk]' />
      </filter>
      <filter class='categorical' column='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:REGION:nk]'>
        <groupfilter function='level-members' level='[none:REGION:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:loc_clus_id:ok]'>
        <groupfilter from='0' function='range' level='[none:loc_clus_id:ok]' to='19' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Geo-Dashboard' type='sheet' worksheet='cluster' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Geo-Dashboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Geo-Dashboard' type='sheet' worksheet='map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Geo-Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='cluster'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#898989' fontname='Tw Cen MT' fontsize='16'>Cluster ID (Click to Filter the Dashboard)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mrtlist' name='federated.0xkihiv15vrdkm1ecxz8v07hctg1' />
          </datasources>
          <datasource-dependencies datasource='federated.0xkihiv15vrdkm1ecxz8v07hctg1'>
            <column caption='Location' datatype='string' name='[LOCATION]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;BOON KENG&quot;' value='&quot;Serangoon&quot;' />
                <semantic-value key='&quot;BUGIS&quot;' value='&quot;Central Water Catchment&quot;' />
                <semantic-value key='&quot;BUONA VISTA&quot;' value='&quot;Clementi&quot;' />
                <semantic-value key='&quot;HARBOUR FRONT&quot;' value='&quot;Outram&quot;' />
                <semantic-value key='&quot;JURONG&quot;' value='&quot;Jurong East&quot;' />
                <semantic-value key='&quot;KHATIB&quot;' value='&quot;Yishun&quot;' />
                <semantic-value key='&quot;KRANJI&quot;' value='&quot;Yishun&quot;' />
                <semantic-value key='&quot;MACPHERSON&quot;' value='&quot;Marine Parade&quot;' />
                <semantic-value key='&quot;MARINA BAY&quot;' value='&quot;Marine Parade&quot;' />
                <semantic-value key='&quot;NICOLL HIGHWAY&quot;' value='&quot;Central Water Catchment&quot;' />
                <semantic-value key='&quot;RAFFLES&quot;' value='&quot;Central Water Catchment&quot;' />
              </semantic-values>
            </column>
            <column caption='Region' datatype='string' name='[REGION]' role='dimension' type='nominal' />
            <column caption='Loc Clus Id' datatype='integer' name='[loc_clus_id]' role='dimension' type='ordinal' />
            <column-instance column='[LOCATION]' derivation='None' name='[none:LOCATION:nk]' pivot='key' type='nominal' />
            <column-instance column='[REGION]' derivation='None' name='[none:REGION:nk]' pivot='key' type='nominal' />
            <column-instance column='[loc_clus_id]' derivation='None' name='[none:loc_clus_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[total_count]' derivation='Sum' name='[pcto:sum:total_count:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[total_count]' derivation='Sum' name='[sum:total_count:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[Action (Location,Region)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[LOCATION]' />
              <groupfilter function='level-members' level='[REGION]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:REGION:nk]</column>
            <column>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:loc_clus_id:ok]</column>
            <column>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:LOCATION:nk]</column>
            <column>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[Action (Location,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='tick-color' scope='cols' value='#898989' />
            <format attr='height' field='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:loc_clus_id:ok]' value='21' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-size' value='8' />
            <format attr='text-format' field='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[pcto:sum:total_count:qk]' value='p0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:loc_clus_id:ok]' value='8' />
            <format attr='text-orientation' field='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:loc_clus_id:ok]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[sum:total_count:qk]' palette='tableau-map-temperatur' symmetric='false' type='interpolated' />
            <encoding attr='color' field='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[pcto:sum:total_count:qk]' num-steps='5' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:loc_clus_id:ok]' />
              <text column='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[pcto:sum:total_count:qk]' />
              <lod column='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[sum:total_count:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[sum:total_count:qk]</rows>
        <cols>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:loc_clus_id:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='heatmap'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#898989' fontname='Tw Cen MT' fontsize='16'>Users List by Locations</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='mrtlist' name='federated.0xkihiv15vrdkm1ecxz8v07hctg1' />
          </datasources>
          <datasource-dependencies datasource='federated.0xkihiv15vrdkm1ecxz8v07hctg1'>
            <column caption='Location' datatype='string' name='[LOCATION]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;BOON KENG&quot;' value='&quot;Serangoon&quot;' />
                <semantic-value key='&quot;BUGIS&quot;' value='&quot;Central Water Catchment&quot;' />
                <semantic-value key='&quot;BUONA VISTA&quot;' value='&quot;Clementi&quot;' />
                <semantic-value key='&quot;HARBOUR FRONT&quot;' value='&quot;Outram&quot;' />
                <semantic-value key='&quot;JURONG&quot;' value='&quot;Jurong East&quot;' />
                <semantic-value key='&quot;KHATIB&quot;' value='&quot;Yishun&quot;' />
                <semantic-value key='&quot;KRANJI&quot;' value='&quot;Yishun&quot;' />
                <semantic-value key='&quot;MACPHERSON&quot;' value='&quot;Marine Parade&quot;' />
                <semantic-value key='&quot;MARINA BAY&quot;' value='&quot;Marine Parade&quot;' />
                <semantic-value key='&quot;NICOLL HIGHWAY&quot;' value='&quot;Central Water Catchment&quot;' />
                <semantic-value key='&quot;RAFFLES&quot;' value='&quot;Central Water Catchment&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[LOC]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[REGION]' role='dimension' type='nominal' />
            <column caption='Loc Clus Id' datatype='integer' name='[loc_clus_id]' role='dimension' type='ordinal' />
            <column-instance column='[LOC]' derivation='None' name='[none:LOC:nk]' pivot='key' type='nominal' />
            <column-instance column='[LOCATION]' derivation='None' name='[none:LOCATION:nk]' pivot='key' type='nominal' />
            <column-instance column='[REGION]' derivation='None' name='[none:REGION:nk]' pivot='key' type='nominal' />
            <column-instance column='[loc_clus_id]' derivation='None' name='[none:loc_clus_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[uid]' derivation='None' name='[none:uid:ok]' pivot='key' type='ordinal' />
            <column-instance column='[total_count]' derivation='Sum' name='[sum:total_count:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_count]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Uid' datatype='integer' name='[uid]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[Action (Loc Clus Id)]'>
            <groupfilter function='level-members' level='[loc_clus_id]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[Action (Location,Region)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[LOCATION]' />
              <groupfilter function='level-members' level='[REGION]' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:REGION:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;CENTRAL&quot;</bucket>
              <bucket>&quot;EAST&quot;</bucket>
              <bucket>&quot;NORTH&quot;</bucket>
              <bucket>&quot;NORTH_EAST&quot;</bucket>
              <bucket>&quot;WEST&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:uid:ok]' direction='DESC' using='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[sum:total_count:qk]' />
          <slices>
            <column>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:REGION:nk]</column>
            <column>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:loc_clus_id:ok]</column>
            <column>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:LOCATION:nk]</column>
            <column>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[Action (Loc Clus Id)]</column>
            <column>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[Action (Location,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='vertical-align' data-class='total' value='center' />
            <format attr='text-align' data-class='total' value='center' />
            <format attr='text-align' data-class='subtotal' value='center' />
            <format attr='vertical-align' data-class='subtotal' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' scope='rows' value='center' />
            <format attr='vertical-align' scope='cols' value='center' />
            <format attr='text-align' value='left' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[sum:total_count:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[sum:total_count:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:uid:ok]</rows>
        <cols>([federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:REGION:nk] / [federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:LOC:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='map'>
      <table>
        <view>
          <datasources>
            <datasource caption='mrtlist' name='federated.0xkihiv15vrdkm1ecxz8v07hctg1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0xkihiv15vrdkm1ecxz8v07hctg1'>
            <column caption='Location' datatype='string' name='[LOCATION]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;BOON KENG&quot;' value='&quot;Serangoon&quot;' />
                <semantic-value key='&quot;BUGIS&quot;' value='&quot;Central Water Catchment&quot;' />
                <semantic-value key='&quot;BUONA VISTA&quot;' value='&quot;Clementi&quot;' />
                <semantic-value key='&quot;HARBOUR FRONT&quot;' value='&quot;Outram&quot;' />
                <semantic-value key='&quot;JURONG&quot;' value='&quot;Jurong East&quot;' />
                <semantic-value key='&quot;KHATIB&quot;' value='&quot;Yishun&quot;' />
                <semantic-value key='&quot;KRANJI&quot;' value='&quot;Yishun&quot;' />
                <semantic-value key='&quot;MACPHERSON&quot;' value='&quot;Marine Parade&quot;' />
                <semantic-value key='&quot;MARINA BAY&quot;' value='&quot;Marine Parade&quot;' />
                <semantic-value key='&quot;NICOLL HIGHWAY&quot;' value='&quot;Central Water Catchment&quot;' />
                <semantic-value key='&quot;RAFFLES&quot;' value='&quot;Central Water Catchment&quot;' />
              </semantic-values>
            </column>
            <column caption='Region' datatype='string' name='[REGION]' role='dimension' type='nominal' />
            <column caption='Loc Clus Id' datatype='integer' name='[loc_clus_id]' role='dimension' type='ordinal' />
            <column-instance column='[LOCATION]' derivation='None' name='[none:LOCATION:nk]' pivot='key' type='nominal' />
            <column-instance column='[REGION]' derivation='None' name='[none:REGION:nk]' pivot='key' type='nominal' />
            <column-instance column='[loc_clus_id]' derivation='None' name='[none:loc_clus_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[total_count]' derivation='Sum' name='[sum:total_count:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[Action (Loc Clus Id)]'>
            <groupfilter from='0' function='range' level='[loc_clus_id]' to='19' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[Inclusions (Location,Region)]'>
            <groupfilter function='reorder-dimensionality' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:REGION:nk]' member='&quot;CENTRAL&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;BISHAN&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;BOON KENG&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;BUONA VISTA&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;HARBOUR FRONT&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;MACPHERSON&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;MARINA BAY&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;ORCHARD&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;RAFFLES&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:REGION:nk]' member='&quot;EAST&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;BEDOK&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;PAYA LEBAR&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;TAMPINES&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:REGION:nk]' member='&quot;NORTH&quot;' />
                  <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;WOODLANDS&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:REGION:nk]' member='&quot;NORTH_EAST&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;ANG MO KIO&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;SENGKANG&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;SERANGOON&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:REGION:nk]' member='&quot;WEST&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;CHOA CHU KANG&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;JURONG&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;TUAS&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[none:LOCATION:nk]' />
                <hierarchy name='[none:REGION:nk]' />
              </order>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:REGION:nk]</column>
            <column>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:LOCATION:nk]</column>
            <column>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:loc_clus_id:ok]</column>
            <column>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[Action (Loc Clus Id)]</column>
            <column>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[Inclusions (Location,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[Longitude (generated)]' field-type='quantitative' max='11579282.969004262' min='11532579.944722019' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[Latitude (generated)]' field-type='quantitative' max='165988.25643401267' min='132738.14912996098' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[sum:total_count:qk]' num-steps='3' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[sum:total_count:qk]' />
              <text column='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:LOCATION:nk]' />
              <lod column='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:REGION:nk]' />
              <geometry column='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.71364641189575195' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[Latitude (generated)]</rows>
        <cols>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[Longitude (generated)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Geo-Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#666666' fontname='Tw Cen MT' fontsize='24'>Clustering of Users by Locations</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='580' maxwidth='1000' minheight='580' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <datasources>
        <datasource caption='mrtlist' name='federated.0xkihiv15vrdkm1ecxz8v07hctg1' />
      </datasources>
      <datasource-dependencies datasource='federated.0xkihiv15vrdkm1ecxz8v07hctg1'>
        <column caption='Location' datatype='string' name='[LOCATION]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <semantic-values semantic-role='[State].[Name]'>
            <semantic-value key='&quot;BOON KENG&quot;' value='&quot;Serangoon&quot;' />
            <semantic-value key='&quot;BUGIS&quot;' value='&quot;Central Water Catchment&quot;' />
            <semantic-value key='&quot;BUONA VISTA&quot;' value='&quot;Clementi&quot;' />
            <semantic-value key='&quot;HARBOUR FRONT&quot;' value='&quot;Outram&quot;' />
            <semantic-value key='&quot;JURONG&quot;' value='&quot;Jurong East&quot;' />
            <semantic-value key='&quot;KHATIB&quot;' value='&quot;Yishun&quot;' />
            <semantic-value key='&quot;KRANJI&quot;' value='&quot;Yishun&quot;' />
            <semantic-value key='&quot;MACPHERSON&quot;' value='&quot;Marine Parade&quot;' />
            <semantic-value key='&quot;MARINA BAY&quot;' value='&quot;Marine Parade&quot;' />
            <semantic-value key='&quot;NICOLL HIGHWAY&quot;' value='&quot;Central Water Catchment&quot;' />
            <semantic-value key='&quot;RAFFLES&quot;' value='&quot;Central Water Catchment&quot;' />
          </semantic-values>
        </column>
        <column caption='Region' datatype='string' name='[REGION]' role='dimension' type='nominal' />
        <column-instance column='[LOCATION]' derivation='None' name='[none:LOCATION:nk]' pivot='key' type='nominal' />
        <column-instance column='[REGION]' derivation='None' name='[none:REGION:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='18' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='15' param='vert' type='layout-flow' w='99600' x='0' y='0'>
              <zone h='8104' id='14' type='title' w='99600' x='0' y='0' />
              <zone fixed-size='490' h='84483' id='12' is-fixed='true' param='horz' type='layout-flow' w='99600' x='0' y='8104'>
                <zone h='84483' id='8' param='horz' type='layout-flow' w='99600' x='0' y='8104'>
                  <zone h='84483' id='5' param='horz' type='layout-flow' w='99600' x='0' y='8104'>
                    <zone h='84483' id='3' type='layout-basic' w='99600' x='0' y='8104'>
                      <zone h='42243' id='1' name='heatmap' w='47800' x='0' y='50344' />
                      <zone h='76562' id='6' name='map' show-title='false' w='51800' x='47800' y='16025' />
                      <zone fixed-size='43' h='7921' id='10' is-fixed='true' mode='dropdown' name='map' param='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:REGION:nk]' type='filter' w='13780' x='85820' y='8104' />
                      <zone h='7921' id='13' mode='checkdropdown' name='map' param='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:LOCATION:nk]' type='filter' w='20600' x='47800' y='8104' />
                      <zone h='42240' id='16' name='cluster' w='47800' x='0' y='8104' />
                      <zone h='7921' id='19' mode='checkdropdown' name='map' param='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:STN_NAME:nk]' type='filter' w='17420' x='68400' y='8104' />
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='238'>
            <card param='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:LOCATION:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:loc_clus_id:ok]' type='filter' />
            <card param='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:REGION:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:AREA:nk]</field>
            <field>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:Calculation_166070267804041217:qk]</field>
            <field>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:LOCATION:nk]</field>
            <field>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:REGION:nk]</field>
            <field>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:STN_NAME:nk]</field>
            <field>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:X:qk]</field>
            <field>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:Y:qk]</field>
            <field>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:loc_clus_id:ok]</field>
            <field>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[sum:total_count:qk]</field>
          </color-one-way>
        </highlight>
        <map-scale-visibility value='0' />
      </viewpoint>
    </window>
    <window class='worksheet' name='heatmap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[sum:total_count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[cum:sum:total_count:qk]</field>
            <field>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:LOC:nk]</field>
            <field>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:REGION:nk]</field>
            <field>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:uid:ok]</field>
            <field>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[sum:Number of Records:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='cluster'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:LOCATION:nk]</field>
            <field>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[none:loc_clus_id:ok]</field>
            <field>[federated.0xkihiv15vrdkm1ecxz8v07hctg1].[sum:total_count:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Geo-Dashboard'>
      <viewpoints>
        <viewpoint name='cluster'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='heatmap' />
        <viewpoint name='map'>
          <zoom type='entire-view' />
          <map-scale-visibility value='0' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='15' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Geo-Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='cluster' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='heatmap' width='192'>
      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
      anRhMV6GAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='map' width='192'>
      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
      ytX9pRqqdqQAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
